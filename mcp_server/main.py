# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T19:01:05+00:00



import argparse
import json
import os
from typing import *

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import BaseSecurity, UnsuportedSecurityStub

app = MCPProxy(
    contact={'x-twitter': 'etmdb'},
    description='The Ethiopian Movie Database',
    title='EtMDB REST API v1',
    version='1.0.0',
    servers=[{'url': 'https://etmdb.com'}],
)


@app.get(
    '/api/v1/cinema-detail/search/{cinema_name}',
    description=""" Return cinema details search result

### Response Class (Status 200)

* __{cinema_name}__: Used as a key word to search cinemas,

For more details on how cinemas are listed [see here][ref].
[ref]: https://etmdb.com/en/cinema-list/-updated_date """,
    tags=['cinema_info_retrieval'],
)
def cinema_detail_search_read(cinema_name: str):
    """
    Return cinema details search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/cinema-schedule/search/{movie_title}',
    description=""" Return cinema schedule search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movie cast
* You can use both Amharic or English charset/font to search

For more details about cinema schedule, check each cinema from the cinema list [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def cinema_schedule_search_read(movie_title: str):
    """
    Return cinema schedule search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/cinema-schedule/searchall/{param}',
    description=""" Return cinema schedule search result

### Response Class (Status 200)
__{param}__ argument can be
* movie title
* cinema name
* cinema hall name or
* cinema technology

For more details about cinema schedule, check each cinema from the cinema list [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def cinema_schedule_searchall_read(param: str):
    """
    Return cinema schedule search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/cinema-shedule-showtime/search/{movie_title}',
    description=""" Return cinema schedule and showtime search result

### Response Class (Status 200)
* __{movie_title}__: Used as a key word to search movie cast
* You can use both Amharic or English charset/font to search

For more details about cinema schedule showtime, check each cinema from the cinema list [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def cinema_shedule_showtime_search_read(movie_title: str):
    """
    Return cinema schedule and showtime search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/cinema-shedule-showtime/searchall/{param}',
    description=""" Return cinema schedule and showtime search result

### Response Class (Status 200)
__{param}__ argument can be
* movie title
* cinema name
* cinema hall name
* showtime starting date
* showtime ending date or
* cinema technology

For more details about cinema schedule, check each cinema from the cinema list [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def cinema_shedule_showtime_searchall_read(param: str):
    """
    Return cinema schedule and showtime search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/cinema/search/{id}',
    description=""" Return cinema search result

### Response Class (Status 200)

* __{id}__: Used as a key to search cinemas,

For more details on how cinemas are listed [see here][ref].
[ref]: https://etmdb.com/en/cinema-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def cinema_search_read(id: str):
    """
    Return cinema search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/company-credits/search/{movie_title}',
    description=""" Return company credits search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search company credits for the movie
* You can use both Amharic or English charset/font to search

For more details on how company credits are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=[
        'production_company_search',
        'movie_metadata_search',
        'people_in_film_search',
    ],
)
def company_credits_search_read(movie_title: str):
    """
    Return company credits search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/company-credits/searchall/{param}',
    description=""" Return company credits search result

### Response Class (Status 200)
__{param}__ argument can be
* company name
* movie title or
* company credit description (such as production, cinematography, etc)

For more details on how company credits are listed [see here][ref].
[ref]: https://etmdb.com/en/company-list/company_name """,
    tags=['production_company_search', 'movie_metadata_search'],
)
def company_credits_searchall_read(param: str):
    """
    Return company credits search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/company/search/{company_name}',
    description=""" Return company search result

### Response Class (Status 200)

* __{company_name}__: Used as a key word to search companies,

For more details on how companies are listed [see here][ref].
[ref]: https://etmdb.com/en/company-list/-updated_date """,
    tags=['production_company_search'],
)
def company_search_read(company_name: str):
    """
    Return company search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/filmography-type/search/{filmography_description}',
    description=""" Return filmography type search result

### Response Class (Status 200)

* __{filmography_description}__: Used as a key word to search filmography types

For more details on how filmography types are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['filmography_info_search', 'movie_metadata_search'],
)
def filmography_type_search_read(filmography_description: str):
    """
    Return filmography type search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/filmography/search/{movie_title}',
    description=""" Return filmography search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movies
* You can use both Amharic or English charset/font to search

For more details on how filmographies are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_metadata_search', 'filmography_info_search'],
)
def filmography_search_read(movie_title: str):
    """
    Return filmography search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/filmography/searchall/{param}',
    description=""" Return filmography search result

### Response Class (Status 200)
__{param}__ argument can be
* artist first name
* artist last name
* artist username
* movie title or
* filmography description (such as director, actor, producer, etc)

For more details on how filmographies are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['filmography_info_search', 'movie_metadata_search', 'people_in_film_search'],
)
def filmography_searchall_read(param: str):
    """
    Return filmography search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/genre-type/search/{genre_description}',
    description=""" Return genre type search result

### Response Class (Status 200)

* __{genre_description}__: Used as a key word to search genre types

For more details on how genre types are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_genre_search', 'filmography_info_search'],
)
def genre_type_search_read(genre_description: str):
    """
    Return genre type search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/genre/search/{movie_title}',
    description=""" Return movie genre search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movie genres
* You can use both Amharic or English charset/font to search

For more details on how movies are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_genre_search', 'movie_metadata_search'],
)
def genre_search_read(movie_title: str):
    """
    Return movie genre search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/genre/searchall/{movie_genre_type}',
    description=""" Return movie genre search result

### Response Class (Status 200)

* __{movie_genre_type}__: Used as a key word to search movie genres

For more details on how movies are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_genre_search', 'movie_metadata_search'],
)
def genre_searchall_read(movie_genre_type: str):
    """
    Return movie genre search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/job/search/{job_title}',
    description=""" Return job details search result

### Response Class (Status 200)

* __{job_title}__: Used as a key word to search jobs,

For more details on how job are listed [see here][ref].
[ref]: https://etmdb.com/en/job-list/-updated_date """,
    tags=['job_listing_search'],
)
def job_search_read(job_title: str):
    """
    Return job details search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/job/searchall/{company_name}',
    description=""" Return job details search result

### Response Class (Status 200)

* __{company_name}__: Used as a key word to search jobs,

For more details on how job are listed [see here][ref].
[ref]: https://etmdb.com/en/job-list/-updated_date """,
    tags=['job_listing_search', 'production_company_search'],
)
def job_searchall_read(company_name: str):
    """
    Return job details search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/media/search/{movie_title}',
    description=""" Return movie media search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search media for movies
* You can use both Amharic or English charset/font to search

For more details on how media is listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_metadata_search', 'media_content_search', 'cinema_info_retrieval'],
)
def media_search_read(movie_title: str):
    """
    Return movie media search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/media/searchall/{user}',
    description=""" Return cast media search result

### Response Class (Status 200)
__{user}__ argument can be
* artist first name
* artist last name
* artist username

For more details on how cast media is listed [see here][ref].
[ref]: https://etmdb.com/en/cast-list/-updated_date """,
    tags=['movie_metadata_search', 'media_content_search', 'people_in_film_search'],
)
def media_searchall_read(user: str):
    """
    Return cast media search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/movie-cast/search/{movie_title}',
    description=""" Return movie cast search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movie cast
* You can use both Amharic or English charset/font to search

For more details on how movie casts are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_metadata_search', 'people_in_film_search', 'media_content_search'],
)
def movie_cast_search_read(movie_title: str):
    """
    Return movie cast search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/movie-cast/searchall/{param}',
    description=""" Return movie cast search result

### Response Class (Status 200)
__{param}__ argument can be
* artist first name
* artist last name
* artist username
* movie title or
* character name

For more details on how movie casts are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_metadata_search', 'people_in_film_search', 'media_content_search'],
)
def movie_cast_searchall_read(param: str):
    """
    Return movie cast search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/movie/search/{movie_title}',
    description=""" Return movie search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movies
* You can use both Amharic or English charset/font to search

For more details on how movies are listed [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['movie_metadata_search', 'media_content_search'],
)
def movie_search_read(movie_title: str):
    """
    Return movie search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/news/search/{title}',
    description=""" Return news or article search result

### Response Class (Status 200)

* __{title}__: Used as a key word to search news and articles,

For more details on how news & articles are listed [see here][ref].
[ref]: https://etmdb.com/en/news-list/-updated_date """,
    tags=['news_article_search'],
)
def news_search_read(title: str):
    """
    Return news or article search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/people/search/{user}',
    description=""" Return cast search result

### Response Class (Status 200)
__{param}__ argument can be
* artist first name
* artist last name
* artist username

For more details on how cast are listed [see here][ref].
[ref]: https://etmdb.com/en/cast-list/-updated_date """,
    tags=['movie_metadata_search', 'people_in_film_search', 'media_content_search'],
)
def people_search_read(user: str):
    """
    Return cast search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/showtime/searchall/{param}',
    description=""" Return showtime search result

### Response Class (Status 200)
__{param}__ argument can be
* show time or
* day of the week [Mon=1, Tue=2, Wed=3, Thu=4, Fri=5, Sat=6, Sun=7]

For more details about showtime, check each cinema from the cinema list [see here][ref].
[ref]: https://etmdb.com/en/movie-list/-updated_date """,
    tags=['cinema_info_retrieval', 'movie_metadata_search'],
)
def showtime_searchall_read(param: str):
    """
    Return showtime search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/watchlist/search/{movie_title}',
    description=""" Return watchlist search result

### Response Class (Status 200)

* __{movie_title}__: Used as a key word to search movies on watchlist
* You can use both Amharic or English charset/font to search

For more details on how watchlist are listed [see here][ref].
[ref]: https://etmdb.com/en/movies/watchlist/id """,
    tags=['user_watchlist_search', 'movie_metadata_search'],
)
def watchlist_search_read(movie_title: str):
    """
    Return watchlist search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/v1/watchlist/searchall/{param}',
    description=""" Return watchlist search result

### Response Class (Status 200)
__{param}__ argument can be
* artist first name
* artist last name
* artist username
* movie title or

For more details on how watchlist are listed [see here][ref].
[ref]: https://etmdb.com/en/movies/watchlist/id """,
    tags=['user_watchlist_search'],
)
def watchlist_searchall_read(param: str):
    """
    Return watchlist search result
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="MCP Server")
    parser.add_argument(
        "transport",
        choices=["stdio", "sse", "streamable-http"],
        help="Transport mode (stdio, sse or streamable-http)",
    )
    args = parser.parse_args()

    if "CONFIG_PATH" in os.environ:
        config_path = os.environ["CONFIG_PATH"]
        app.load_configuration(config_path)

    if "CONFIG" in os.environ:
        config = os.environ["CONFIG"]
        app.load_configuration_from_string(config)

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    mcp_settings = json.loads(os.environ.get("MCP_SETTINGS", "{}"))

    app.get_mcp(**mcp_settings).run(transport=args.transport)
